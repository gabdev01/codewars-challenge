package com.tuigroup.codewars.data.remote.model

import com.google.gson.annotations.SerializedName

data class AuthoredChallenge(
    @SerializedName("_id") val id: String,
    @SerializedName("_slugs") val slugs: List<String>,
    @SerializedName("admin_tags") val adminTags: Any,
    @SerializedName("api_version") val apiVersion: Int,
    @SerializedName("approvals_count") val approvalsCount: Int,
    @SerializedName("approved_at") val approvedAt: String,
    @SerializedName("approved_by_id") val approvedById: String,
    @SerializedName("average_completion") val averageCompletion: Double,
    @SerializedName("beta_status") val betaStatus: String,
    @SerializedName("category") val category: String,
    @SerializedName("created_at") val createdAt: String,
    @SerializedName("created_by_id") val createdById: String,
    @SerializedName("description") val description: String,
    @SerializedName("estimated_rank") val estimatedRank: Any,
    @SerializedName("forks_count") val forksCount: Int,
    @SerializedName("input") val input: String,
    @SerializedName("last_published_at") val lastPublishedAt: String,
    @SerializedName("last_revision_number") val lastRevisionNumber: Int,
    @SerializedName("name") val name: String,
    @SerializedName("output") val output: String,
    @SerializedName("published_at") val publishedAt: String,
    @SerializedName("published_status") val publishedStatus: String,
    @SerializedName("rank") val rank: Int,
    @SerializedName("rank_applied_to_author") val rankAppliedToAuthor: Boolean,
    @SerializedName("rank_applied_to_author_at") val rankAppliedToAuthorAt: String,
    @SerializedName("rejections_count") val rejectionsCount: Int,
    @SerializedName("retired_at") val retiredAt: Any,
    @SerializedName("retired_by_id") val retiredById: Any,
    @SerializedName("state") val state: String,
    @SerializedName("status") val status: String,
    @SerializedName("system_tags") val systemTags: List<String>,
    @SerializedName("tags") val tags: List<Any>,
    @SerializedName("total_attempts") val totalAttempts: Int,
    @SerializedName("total_compete_attempts") val totalCompeteAttempts: Int,
    @SerializedName("total_compete_completed") val totalCompeteCompleted: Int,
    @SerializedName("total_compete_skipped") val totalCompeteSkipped: Int,
    @SerializedName("total_completed") val totalCompleted: Int,
    @SerializedName("total_down_votes") val totalDownVotes: Int,
    @SerializedName("total_favorites") val totalFavorites: Int,
    @SerializedName("total_feedback") val totalFeedback: Int,
    @SerializedName("total_flag_votes") val totalFlagVotes: Int,
    @SerializedName("total_players") val totalPlayers: Int,
    @SerializedName("total_plays") val totalPlays: Int,
    @SerializedName("total_seconds") val totalSeconds: Double,
    @SerializedName("total_skips") val totalSkips: Int,
    @SerializedName("total_stars") val totalStars: Int,
    @SerializedName("total_up_votes") val totalUpVotes: Int,
    @SerializedName("total_vote_score") val totalVoteScore: Int,
    @SerializedName("training_schedule_ids") val trainingScheduleIds: List<String>,
    @SerializedName("updated_at") val updatedAt: String
)