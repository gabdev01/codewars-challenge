apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        debug {
            buildConfigField("String", "CODEWARS_URL", "\"https://www.codewars.com/api/v1/\"")
        }
        release {
            buildConfigField("String", "CODEWARS_URL", "\"https://www.codewars.com/api/v1/\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit2Version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2Version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit2Version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    // google-gson
    implementation "com.google.code.gson:gson:$gsonVersion"

    // RxJava bindings for Android
    implementation "io.reactivex.rxjava2:rxandroid:$rxJava2AndroidVersion"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation "io.reactivex.rxjava2:rxjava:$rxJava2Version"

    // Android Architecture Components - Room
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    // optional - RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$roomVersion"
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "android.arch.persistence.room:guava:$roomVersion"
    // Test helpers
    testImplementation "android.arch.persistence.room:testing:$roomVersion"
    androidTestImplementation "android.arch.core:core-testing:$roomVersion"

    // Dagger 2
    compile "com.google.dagger:dagger:$dagger2Version"
    compile "com.google.dagger:dagger-android:$dagger2Version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$dagger2Version"
    kapt "com.google.dagger:dagger-android-support:$dagger2Version"

    // Android Architecture Components - Paging
    implementation "android.arch.paging:runtime:$pagingVersion"
    implementation "android.arch.paging:rxjava2:$pagingRxVersion"
}
repositories {
    mavenCentral()
}
